//! # D-Bus interface proxy for: `com.steampowered.SteamOSManager1.SessionManagement1`
//!
//! This code was generated by `zbus-xmlgen` `5.1.0` from D-Bus introspection data.
//! Source: `com.steampowered.SteamOSManager1.xml`.
//!
//! You may prefer to adapt it, instead of using it verbatim.
//!
//! More information can be found in the [Writing a client proxy] section of the zbus
//! documentation.
//!
//!
//! [Writing a client proxy]: https://dbus2.github.io/zbus/client.html
//! [D-Bus standard interfaces]: https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces,
use zbus::proxy;
#[proxy(
    interface = "com.steampowered.SteamOSManager1.SessionManagement1",
    default_service = "com.steampowered.SteamOSManager1",
    default_path = "/com/steampowered/SteamOSManager1",
    assume_defaults = true
)]
pub trait SessionManagement1 {
    /// CleanTemporarySessions method
    fn clean_temporary_sessions(&self) -> zbus::Result<()>;

    /// SwitchToDesktopMode method
    fn switch_to_desktop_mode(&self) -> zbus::Result<()>;

    /// SwitchToGameMode method
    fn switch_to_game_mode(&self) -> zbus::Result<()>;

    /// SwitchToLoginMode method
    fn switch_to_login_mode(&self, type_: &str) -> zbus::Result<()>;

    /// ValidDesktopSessions method
    fn valid_desktop_sessions(&self) -> zbus::Result<Vec<String>>;

    /// DefaultDesktopSession property
    #[zbus(property)]
    fn default_desktop_session(&self) -> zbus::Result<String>;
    #[zbus(property)]
    fn set_default_desktop_session(&self, value: &str) -> zbus::Result<()>;

    /// DefaultLoginMode property
    #[zbus(property)]
    fn default_login_mode(&self) -> zbus::Result<String>;
    #[zbus(property)]
    fn set_default_login_mode(&self, value: &str) -> zbus::Result<()>;
}
