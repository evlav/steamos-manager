//! # D-Bus interface proxy for: `com.steampowered.SteamOSManager1.RemoteInterface1`
//!
//! This code was generated by `zbus-xmlgen` `5.1.0` from D-Bus introspection data.
//! Source: `com.steampowered.SteamOSManager1.xml`.
//!
//! You may prefer to adapt it, instead of using it verbatim.
//!
//! More information can be found in the [Writing a client proxy] section of the zbus
//! documentation.
//!
//!
//! [Writing a client proxy]: https://dbus2.github.io/zbus/client.html
//! [D-Bus standard interfaces]: https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces,
use zbus::proxy;
#[proxy(
    interface = "com.steampowered.SteamOSManager1.RemoteInterface1",
    default_service = "com.steampowered.SteamOSManager1",
    default_path = "/com/steampowered/SteamOSManager1",
    assume_defaults = true
)]
pub trait RemoteInterface1 {
    /// RegisterInterface method
    fn register_interface(
        &self,
        interface: &str,
        object: &zbus::zvariant::ObjectPath<'_>,
    ) -> zbus::Result<bool>;

    /// UnregisterInterface method
    fn unregister_interface(&self, interface: &str) -> zbus::Result<bool>;

    /// RemoteInterfaces property
    #[zbus(property)]
    fn remote_interfaces(&self) -> zbus::Result<Vec<String>>;
}
